from System.IO import File, Path

class Save(ICommand):
    @property
    def Name(self):
        return "Save"

    def Execute(self, parameters):
        new_code = services.MainWindow._MainWindow__TextEditor.Text
        selected_step = services.Admin.CurrentStep
        name = selected_step.FileName
        if selected_step is None: 
            print "No selected step to save"
            return
        File.WriteAllText(selected_step.FilePath, new_code)
        print "Saved text to %s" % name

class SaveNew(ICommand):
    @property
    def Name(self):
        return "SaveNew"

    def Execute(self, parameters):
        new_code = services.MainWindow._MainWindow__TextEditor.Text
        newStepPath = Path.Combine(services.StepDirectory.Path, parameters)
        File.WriteAllText(newStepPath, new_code)
        print "Saved text to %s" % parameters

class Delete(ICommand):
    @property
    def Name(self):
        return "Delete"

    def Execute(self, parameters):
        if parameters.strip() == "":
            print "no file specified to delete"
            return
        deleteStep = Path.Combine(services.StepDirectory.Path, parameters)
        File.Delete(deleteStep)
        print "Deleted %s" % parameters
